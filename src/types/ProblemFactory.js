"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.ProblemFactory = void 0;
var contracts_1 = require("@ethersproject/contracts");
var ProblemFactory = /** @class */ (function (_super) {
    __extends(ProblemFactory, _super);
    function ProblemFactory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    ProblemFactory.prototype.deploy = function (_problem_statement_hash, _y, _p, _q, _h, overrides) {
        return _super.prototype.deploy.call(this, _problem_statement_hash, _y, _p, _q, _h, overrides || {});
    };
    ProblemFactory.prototype.getDeployTransaction = function (_problem_statement_hash, _y, _p, _q, _h, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _problem_statement_hash, _y, _p, _q, _h, overrides || {});
    };
    ProblemFactory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ProblemFactory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ProblemFactory.connect = function (address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    };
    return ProblemFactory;
}(contracts_1.ContractFactory));
exports.ProblemFactory = ProblemFactory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_problem_statement_hash",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_y",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_p",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_q",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_h",
                type: "uint256"
            },
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract Answer",
                name: "contract_address",
                type: "address"
            },
            {
                indexed: false,
                internalType: "address",
                name: "created_by",
                type: "address"
            },
        ],
        name: "answerContractCreated",
        type: "event"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        name: "answers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "h",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "master_contract_address",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "p",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "problem_statement_hash",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "q",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "y",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "uint256",
                name: "t",
                type: "uint256"
            },
        ],
        name: "createAnswer",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50604051610eb7380380610eb7833981810160405260a081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600281905550836003819055508260048190555081600581905550806006819055505050505050610dd3806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a56dfe4a11610066578063a56dfe4a1461018a578063b8c9d365146101a8578063d9cdac9a146101c6578063ee7e4486146101e4578063fd3ab2821461022e57610093565b80635e9618e71461009857806360c5c972146100f45780638da5cb5b146101225780639ae8886a1461016c575b600080fd5b6100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024c565b604051808215151515815260200191505060405180910390f35b6101206004803603602081101561010a57600080fd5b810190808035906020019092919050505061026c565b005b61012a6103bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101746103e5565b6040518082815260200191505060405180910390f35b6101926103eb565b6040518082815260200191505060405180910390f35b6101b06103f1565b6040518082815260200191505060405180910390f35b6101ce6103f7565b6040518082815260200191505060405180910390f35b6101ec6103fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610236610422565b6040518082815260200191505060405180910390f35b60076020528060005260406000206000915054906101000a900460ff1681565b60008160035460045460055460065460405161028790610428565b8086815260200185815260200184815260200183815260200182815260200195505050505050604051809103906000f0801580156102c9573d6000803e3d6000fd5b5090507fc0a7bc85cfa5ca92cd50ca3f9342a608bb0b4bec9b88c46ffc42549e824c50ce8133604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b60065481565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b610969806104368339019056fe60806040526000600a60006101000a81548160ff0219169083600281111561002357fe5b021790555034801561003457600080fd5b50604051610969380380610969833981810160405260a081101561005757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460098190555083600781905550826004819055508160058190555080600681905550600554438161013f57fe5b06600281905550505050505061080f8061015a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638cbb4fee11610097578063a56dfe4a11610066578063a56dfe4a146102f2578063b8c9d36514610310578063fd3ab2821461032e578063fdacd5761461034c576100f5565b80638cbb4fee1461024e5780638da5cb5b1461026c57806392d0d153146102b65780639ae8886a146102d4576100f5565b8063445df0ac116100d3578063445df0ac1461019a57806349a7a26d146101b85780635011eede146102025780638753367f14610220576100f5565b8063200d2ed2146100fa57806325a58b56146101265780633148f14f14610144575b600080fd5b61010261037a565b6040518082600281111561011257fe5b60ff16815260200191505060405180910390f35b61012e61038d565b6040518082815260200191505060405180910390f35b6101846004803603606081101561015a57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610393565b6040518082815260200191505060405180910390f35b6101a2610409565b6040518082815260200191505060405180910390f35b6101c061040f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020a610435565b6040518082815260200191505060405180910390f35b61024c6004803603602081101561023657600080fd5b8101908080359060200190929190505050610457565b005b6102566105b1565b6040518082815260200191505060405180910390f35b6102746105b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102be6105dc565b6040518082815260200191505060405180910390f35b6102dc6105e2565b6040518082815260200191505060405180910390f35b6102fa6105e8565b6040518082815260200191505060405180910390f35b6103186105ee565b6040518082815260200191505060405180910390f35b6103366105f4565b6040518082815260200191505060405180910390f35b6103786004803603602081101561036257600080fd5b81019080803590602001909291905050506105fa565b005b600a60009054906101000a900460ff1681565b60025481565b6000808314156103a65760019050610402565b6000600284816103b257fe5b0614156103e65760006103d085600286816103c957fe5b0485610393565b905082818202816103dd57fe5b06915050610402565b816103f5856001860385610393565b8502816103fe57fe5b0690505b9392505050565b60085481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60009054906101000a900460ff16600281111561045257fe5b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105ae5760006104b88261065b565b90506000600554806104c657fe5b6009546104da600754600254600554610393565b0990507ffa366607e86f7102db62f18adf30a6724e801f1c7c93592fb2715f54e0fe35c5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828414604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a180821461057e576002610581565b60015b600a60006101000a81548160ff0219169083600281111561059e57fe5b02179055506105ab610673565b50505b50565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b60045481565b60075481565b60065481565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561065857806008819055505b50565b600061066c60065483600554610393565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d602081101561070b57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16636528e3416000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b50505050505056fea265627a7a72315820af9fc4508ca372874ebeeec2cf6d64aa555a43f304b9c5303ce1ddd0aea5684964736f6c63430005100032a265627a7a72315820ee530d5d36e7e196b6ac030b7045d02ca0d0f95b98f4675ede5c52c35b4a0a7c64736f6c63430005100032";
